#This is based on https://kubernetes.io/blog/2019/03/15/kubernetes-setup-using-ansible-and-vagrant/
#Only modifying the user, because I am not using vagrant

- name: Install packages that allow apt to be used over HTTPS
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - apt-transport-https
    - ca-certificates
    - curl
    - gnupg-agent
    - software-properties-common

- name: Add an apt signing key for Docker
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add apt repository for stable version
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
    state: present

- name: Install docker and its dependecies
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
    - docker-ce
    - docker-ce-cli
    - containerd.io
  notify:
    - docker status

- name: Add {{ kubernetes_user }} user to docker group
  user:
    name: "{{ kubernetes_user }}"
    group: docker

#Kubelet will not start if swap is enabled
- name: Remove swapfile from /etc/fstab
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Add an apt signing key for Kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

#Install kubelet, kubeadm, and kubectl
- name: Adding apt repository for Kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: Install Kubernetes binaries
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
  vars:
    packages:
      - kubelet
      - kubeadm
      - kubectl

#- name: Ensure kubelet config file exists
#  file:
#    path: /etc/default/kubelet
#    state: touch

#- name: Configure node ip
#  lineinfile:
#    path: /etc/default/kubelet
#    line: KUBELET_EXTRA_ARGS=--node-ip={{ ansible_host }}

#- name: Restart kubelet
#  service:
#    name: kubelet
#    daemon_reload: yes
#    state: restarted